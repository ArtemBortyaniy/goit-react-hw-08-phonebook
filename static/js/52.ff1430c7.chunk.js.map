{"version":3,"file":"static/js/52.ff1430c7.chunk.js","mappings":"mLACA,MAAuB,0BAAvB,EAAyD,2BAAzD,EAA4F,2BAA5F,EAAsI,kCAAtI,EAAiL,4B,6BCGpKA,EAAc,WACzB,IAAMC,GAAWC,EAAAA,EAAAA,MAcjB,OACE,kBAAMC,UAAWC,EAAUC,SAbR,SAAAC,GACnBA,EAAEC,iBACF,IAAMC,EAAOF,EAAEG,OACfR,GACES,EAAAA,EAAAA,IAAY,CACVC,KAAMH,EAAKI,SAASD,KAAKE,MACzBC,OAAQN,EAAKI,SAASE,OAAOD,SAGjCL,EAAKO,OACN,EAGC,WACE,mBAAOZ,UAAWC,EAAlB,kBAEE,kBACEY,KAAK,OACLL,KAAK,OACLM,MAAM,yIACNC,UAAQ,EACRf,UAAWC,QAGf,mBAAOD,UAAWC,EAAlB,oBAEE,kBACEY,KAAK,MACLL,KAAK,SACLM,MAAM,+FACNC,UAAQ,EACRf,UAAWC,QAGf,gBAAKD,UAAWC,EAAhB,UACE,mBAAQY,KAAK,SAASb,UAAWC,EAAjC,6BAMP,EC/CD,EAA4B,0BAA5B,EAA8D,sBAA9D,EAA4F,sB,UCG/Ee,EAAS,WACpB,IAAMlB,GAAWC,EAAAA,EAAAA,MAMjB,OACE,gBAAKC,UAAWC,EAAhB,UACE,mBAAOD,UAAWC,EAAlB,mCAEE,kBACEY,KAAK,OACLL,KAAK,SACLO,UAAQ,EACRf,UAAWC,EACXgB,SAbmB,SAAAd,GACzBL,GAASoB,EAAAA,EAAAA,GAAgBf,EAAEG,OAAOI,OACnC,QAgBF,ECxBD,EAA4B,yBCEfS,EAAQ,SAAC,GAAqB,IAAnBL,EAAkB,EAAlBA,MAClBM,EAAM,MAEV,OAHwC,EAAXP,MAI3B,IAAK,KACHO,EAAM,KACN,MACF,IAAK,KACHA,EAAM,KACN,MACF,IAAK,KACHA,EAAM,KAOV,OAAO,SAACA,EAAD,CAAKpB,UAAWC,EAAhB,SAAgCa,GACxC,ECrBD,EAA4B,gCAA5B,EAAmE,2BAAnE,EAAqG,2BAArG,EAA+I,mCCC3IO,EAAY,YAgFT,IAAIC,EAAuB,SAA8BC,EAAGC,GACjE,OAAOD,IAAMC,CACd,EAqBM,SAASC,EAAeC,EAAMC,GACnC,IAAIC,EAAoD,kBAA3BD,EAAsCA,EAAyB,CAC1FE,cAAeF,GAEbG,EAAwBF,EAAgBC,cACxCA,OAA0C,IAA1BC,EAAmCR,EAAuBQ,EAC1EC,EAAwBH,EAAgBI,QACxCA,OAAoC,IAA1BD,EAAmC,EAAIA,EACjDE,EAAsBL,EAAgBK,oBACtCC,EA7BC,SAAkCL,GACvC,OAAO,SAAoCM,EAAMC,GAC/C,GAAa,OAATD,GAA0B,OAATC,GAAiBD,EAAKE,SAAWD,EAAKC,OACzD,OAAO,EAMT,IAFA,IAAIA,EAASF,EAAKE,OAETC,EAAI,EAAGA,EAAID,EAAQC,IAC1B,IAAKT,EAAcM,EAAKG,GAAIF,EAAKE,IAC/B,OAAO,EAIX,OAAO,CACR,CACF,CAYkBC,CAAyBV,GACtCW,EAAoB,IAAZR,EA/Gd,SAA8BS,GAC5B,IAAIC,EACJ,MAAO,CACLC,IAAK,SAAaC,GAChB,OAAIF,GAASD,EAAOC,EAAME,IAAKA,GACtBF,EAAMhC,MAGRW,CACR,EACDwB,IAAK,SAAaD,EAAKlC,GACrBgC,EAAQ,CACNE,IAAKA,EACLlC,MAAOA,EAEV,EACDoC,WAAY,WACV,OAAOJ,EAAQ,CAACA,GAAS,EAC1B,EACDK,MAAO,WACLL,OAAQM,CACT,EAEJ,CAwF6BC,CAAqBf,GAtFnD,SAAwBF,EAASS,GAC/B,IAAIS,EAAU,GAEd,SAASP,EAAIC,GACX,IAAIO,EAAaD,EAAQE,WAAU,SAAUV,GAC3C,OAAOD,EAAOG,EAAKF,EAAME,IAC1B,IAED,GAAIO,GAAc,EAAG,CACnB,IAAIT,EAAQQ,EAAQC,GAOpB,OALIA,EAAa,IACfD,EAAQG,OAAOF,EAAY,GAC3BD,EAAQI,QAAQZ,IAGXA,EAAMhC,KACd,CAGD,OAAOW,CACR,CAwBD,MAAO,CACLsB,IAAKA,EACLE,IAxBF,SAAaD,EAAKlC,GACZiC,EAAIC,KAASvB,IAEf6B,EAAQI,QAAQ,CACdV,IAAKA,EACLlC,MAAOA,IAGLwC,EAAQb,OAASL,GACnBkB,EAAQK,MAGb,EAaCT,WAXF,WACE,OAAOI,CACR,EAUCH,MARF,WACEG,EAAU,EACX,EAQF,CAmCgEM,CAAexB,EAASE,GAEvF,SAASuB,IACP,IAAI/C,EAAQ8B,EAAMG,IAAIe,WAEtB,GAAIhD,IAAUW,EAAW,CAIvB,GAFAX,EAAQgB,EAAKiC,MAAM,KAAMD,WAErBzB,EAAqB,CACvB,IAAIiB,EAAUV,EAAMM,aAChBc,EAAgBV,EAAQW,MAAK,SAAUnB,GACzC,OAAOT,EAAoBS,EAAMhC,MAAOA,EACzC,IAEGkD,IACFlD,EAAQkD,EAAclD,MAEzB,CAED8B,EAAMK,IAAIa,UAAWhD,EACtB,CAED,OAAOA,CACR,CAMD,OAJA+C,EAASK,WAAa,WACpB,OAAOtB,EAAMO,OACd,EAEMU,CACR,CC/ID,SAASM,EAAgBC,GACvB,IAAIC,EAAeC,MAAMC,QAAQH,EAAM,IAAMA,EAAM,GAAKA,EAExD,IAAKC,EAAaG,OAAM,SAAUC,GAChC,MAAsB,oBAARA,CACf,IAAG,CACF,IAAIC,EAAkBL,EAAaM,KAAI,SAAUF,GAC/C,MAAsB,oBAARA,EAAqB,aAAeA,EAAI7D,MAAQ,WAAa,YAAc6D,CAC1F,IAAEG,KAAK,MACR,MAAM,IAAIC,MAAM,kGAAoGH,EAAkB,IACvI,CAED,OAAOL,CACR,CAEM,SAASS,EAAsBC,GACpC,IAAK,IAAIC,EAAOlB,UAAUrB,OAAQwC,EAAyB,IAAIX,MAAMU,EAAO,EAAIA,EAAO,EAAI,GAAIE,EAAO,EAAGA,EAAOF,EAAME,IACpHD,EAAuBC,EAAO,GAAKpB,UAAUoB,GAG/C,IAAIC,EAAiB,WACnB,IAAK,IAAIC,EAAQtB,UAAUrB,OAAQ2B,EAAQ,IAAIE,MAAMc,GAAQC,EAAQ,EAAGA,EAAQD,EAAOC,IACrFjB,EAAMiB,GAASvB,UAAUuB,GAG3B,IAEIC,EAFAC,EAAkB,EAOlBC,EAAwB,CAC1BC,oBAAgBrC,GAGdsC,EAAatB,EAAMT,MAQvB,GAN0B,kBAAf+B,IACTF,EAAwBE,EAExBA,EAAatB,EAAMT,OAGK,oBAAf+B,EACT,MAAM,IAAIb,MAAM,qFAAuFa,EAAa,KAKtH,IAAIC,EAAwBH,EACxBI,EAAyBD,EAAsBF,eAC/CA,OAA4C,IAA3BG,EAAoCX,EAAyBW,EAM9EC,EAAsBvB,MAAMC,QAAQkB,GAAkBA,EAAiB,CAACA,GACxEpB,EAAeF,EAAgBC,GAC/B0B,EAAqBf,EAAQhB,WAAM,EAAQ,CAAC,WAG9C,OAFAwB,IAEOG,EAAW3B,MAAM,KAAMD,UAC/B,GAAEiC,OAAOF,IAENG,EAAWjB,GAAQ,WAIrB,IAHA,IAAIkB,EAAS,GACTxD,EAAS4B,EAAa5B,OAEjBC,EAAI,EAAGA,EAAID,EAAQC,IAG1BuD,EAAOC,KAAK7B,EAAa3B,GAAGqB,MAAM,KAAMD,YAK1C,OADAwB,EAAcQ,EAAmB/B,MAAM,KAAMkC,EAE9C,IAeD,OAdAE,OAAOC,OAAOJ,EAAU,CACtBN,WAAYA,EACZI,mBAAoBA,EACpBzB,aAAcA,EACdgC,WAAY,WACV,OAAOf,CACR,EACDgB,eAAgB,WACd,OAAOf,CACR,EACDgB,oBAAqB,WACnB,OAAOhB,EAAkB,CAC1B,IAEIS,CACR,EAGD,OAAOb,CACR,CACM,IAAIA,EAAgCL,EAAsBjD,GClGpD2E,EAAwBrB,EACnC,CAH4B,SAAAsB,GAAK,OAAIA,EAAMC,SAASC,KAAnB,EADN,SAAAF,GAAK,OAAIA,EAAMG,QAAQC,MAAlB,IAKhC,SAACH,EAAUE,GACT,OAAOF,EAASI,QAAO,SAAAC,GAAO,OAAIA,EAAQnG,KAAKoG,SAASJ,EAA1B,GAC/B,I,8BCRH,EAAkC,+BAAlC,EAAkF,8BCG5EK,EAAYC,SAASC,cAAc,eAE5BC,EAAQ,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,QAWhC,SAASC,EAAchH,GACN,WAAXA,EAAEiH,MACJF,GAEH,EAdDG,EAAAA,EAAAA,YAAU,WAIR,OAFAC,OAAOC,iBAAiB,UAAWJ,GAE5B,WAELG,OAAOE,oBAAoB,UAAWL,EACvC,CACF,IAcD,OAAOM,EAAAA,EAAAA,eACL,gBAAKzH,UAAWC,EAAqByH,QAPX,SAAAvH,GACtBA,EAAEG,SAAWH,EAAEwH,eACjBT,GAEH,EAGC,UACE,gBAAKlH,UAAWC,EAAhB,SAAqCgH,MAEvCJ,EAEH,EChCYe,EAAW,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,GAAIrH,EAA4B,EAA5BA,KAAMG,EAAsB,EAAtBA,OAAQuG,EAAc,EAAdA,QACrCpH,GAAWC,EAAAA,EAAAA,MAejB,OACE,kBAAMG,SAda,SAAAC,GACnBA,EAAEC,iBACF,IAAMC,EAAOF,EAAEG,OACfR,GACEgI,EAAAA,EAAAA,IAAa,CACXC,UAAWF,EACXrH,KAAMH,EAAKI,SAASD,KAAKE,MACzBC,OAAQN,EAAKI,SAASE,OAAOD,SAGjCwG,GACD,EAGC,WACE,qCAEE,kBACErG,KAAK,OACLL,KAAK,OACLwH,YAAaxH,EAEbM,MAAM,yIACNC,UAAQ,QAGZ,uCAEE,kBACEF,KAAK,MACLL,KAAK,SACLwH,YAAarH,EAEbG,MAAM,+FACNC,UAAQ,QAGZ,0BACE,mBAAQF,KAAK,SAAb,8BAIP,ECzCYoH,EAAc,SAAC,GAA0B,IAAxBJ,EAAuB,EAAvBA,GAAIrH,EAAmB,EAAnBA,KAAMG,EAAa,EAAbA,OAChCb,GAAWC,EAAAA,EAAAA,MACjB,GAAkCmI,EAAAA,EAAAA,WAAS,GAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KAMMC,EAAoB,WACxBD,GAAcD,EACf,EAED,OACE,gBAAInI,UAAWC,EAAf,WACE,yBACGO,EADH,KACWG,MAEX,mBAAQE,KAAK,SAASgH,GAAIA,EAAIH,QAAS,kBAAMW,GAAN,EAAvC,mBAGA,mBACExH,KAAK,SACLb,UAAWC,EACXyH,QAAS,kBAnBM,SAAAG,GACnB,OAAO/H,GAASwI,EAAAA,EAAAA,IAAeT,GAChC,CAiBoBU,CAAaV,EAAnB,EAHX,oBAOCM,IACC,SAACnB,EAAD,CAAOE,QAASmB,EAAhB,UACE,SAACT,EAAD,CACEC,GAAIA,EACJrH,KAAMA,EACNG,OAAQA,EACRuG,QAASmB,QAMpB,ECzCYG,EAAc,WACzB,IAAMC,GAAkBC,EAAAA,EAAAA,IAAYtC,GAEpC,OACE,gBAAKpG,UAAWC,EAAhB,UACE,eAAID,UAAWC,EAAf,SACGwI,EAAgBlE,KAAI,YAA2B,IAAxBsD,EAAuB,EAAvBA,GAAIrH,EAAmB,EAAnBA,KAAMG,EAAa,EAAbA,OAChC,OAAO,SAACsH,EAAD,CAAaJ,GAAIA,EAAIrH,KAAMA,EAAMG,OAAQA,GAAakH,EAC9D,OAIR,ECfYc,EAAkB,SAAAtC,GAAK,OAAIA,EAAMC,SAASsC,SAAnB,EAEvBC,EAAc,SAAAxC,GAAK,OAAIA,EAAMC,SAASwC,KAAnB,E,UC4BhC,EAtBiB,WACf,IAAMhJ,GAAWC,EAAAA,EAAAA,MACXgJ,GAAQL,EAAAA,EAAAA,IAAYG,GACpBD,GAAYF,EAAAA,EAAAA,IAAYC,GAM9B,OAJAtB,EAAAA,EAAAA,YAAU,WACRvH,GAASkJ,EAAAA,EAAAA,MACV,GAAE,CAAClJ,KAGF,4BACE,SAACqB,EAAD,CAAOL,MAAO,YAAaD,KAAM,QACjC,SAAChB,EAAD,KACA,SAACsB,EAAD,CAAOL,MAAO,WAAYD,KAAM,QAChC,SAACG,EAAD,IACC4H,IAAa,kDACbG,IAAS,kCACV,SAACP,EAAD,MAGL,C","sources":["webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://react-homework-template/./src/components/Title/Title.module.css?a947","components/Title/Title.jsx","webpack://react-homework-template/./src/components/ContactList/ContactsList.module.css?c071","../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js","redux/filters/selectors.js","webpack://react-homework-template/./src/components/Modal/Modal.module.css?28d7","components/Modal/Modal.jsx","components/FormEdit/FormEdit.jsx","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.jsx","redux/contacts/selectors.js","pages/Contacts/Contacts.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\",\"label\":\"ContactForm_label__-cVXI\",\"input\":\"ContactForm_input__Bl93P\",\"btnContainer\":\"ContactForm_btnContainer__yya47\",\"button\":\"ContactForm_button__eSwX9\"};","import css from './ContactForm.module.css';\nimport { useDispatch } from 'react-redux';\nimport { addContacts } from 'redux/contacts/operations';\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.target;\n    dispatch(\n      addContacts({\n        name: form.elements.name.value,\n        number: form.elements.number.value,\n      })\n    );\n    form.reset();\n  };\n\n  return (\n    <form className={css.form} onSubmit={handleSubmit}>\n      <label className={css.label}>\n        Name\n        <input\n          type=\"text\"\n          name=\"name\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          className={css.input}\n        />\n      </label>\n      <label className={css.label}>\n        Number\n        <input\n          type=\"tel\"\n          name=\"number\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          className={css.input}\n        />\n      </label>\n      <div className={css.btnContainer}>\n        <button type=\"submit\" className={css.button}>\n          Add contact\n        </button>\n      </div>\n    </form>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Filter_container__L5eml\",\"label\":\"Filter_label__vEd1E\",\"input\":\"Filter_input__N7T3z\"};","import css from './Filter.module.css';\nimport { useDispatch } from 'react-redux';\nimport { setStatusFilter } from 'redux/filters/slice';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n\n  const handleChangeFilter = e => {\n    dispatch(setStatusFilter(e.target.value));\n  };\n\n  return (\n    <div className={css.container}>\n      <label className={css.label}>\n        Find contacts by name\n        <input\n          type=\"text\"\n          name=\"filter\"\n          required\n          className={css.input}\n          onChange={handleChangeFilter}\n        />\n      </label>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Title_container__7n+8c\"};","import css from './Title.module.css';\nimport PropTypes from 'prop-types';\n\nexport const Title = ({ title, type }) => {\n  let Tag = 'div'; // По умолчанию используется тег <div>\n\n  switch (type) {\n    case 'h1':\n      Tag = 'h1';\n      break;\n    case 'h2':\n      Tag = 'h2';\n      break;\n    case 'h3':\n      Tag = 'h3';\n      break;\n    // Добавьте дополнительные кейсы для других типов тегов, если необходимо\n    default:\n      break;\n  }\n\n  return <Tag className={css.container}>{title}</Tag>;\n};\n\nTitle.propTypes = {\n  title: PropTypes.string.isRequired,\n  type: PropTypes.oneOf(['h1', 'h2', 'h3']).isRequired, // Определите доступные типы тегов\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"ContactsList_container__KAavr\",\"list\":\"ContactsList_list__KDt-1\",\"item\":\"ContactsList_item__I868R\",\"buttonDelete\":\"ContactsList_buttonDelete__XyuXq\"};","// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectFilters = state => state.filters.status;\nexport const selectContacts = state => state.contacts.items;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilters],\n  (contacts, filters) => {\n    return contacts.filter(contact => contact.name.includes(filters));\n  }\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"modal__backdrop\":\"Modal_modal__backdrop__Bvr-f\",\"modal__content\":\"Modal_modal__content__VSCXP\"};","import { createPortal } from 'react-dom';\nimport css from './Modal.module.css';\nimport { useEffect } from 'react';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nexport const Modal = ({ children, onClose }) => {\n  useEffect(() => {\n    // console.log('listener');\n    window.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      // console.log('remove listener');\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  });\n\n  function handleKeyDown(e) {\n    if (e.code === 'Escape') {\n      onClose();\n    }\n  }\n\n  const handleBackdropClick = e => {\n    if (e.target === e.currentTarget) {\n      onClose();\n    }\n  };\n\n  return createPortal(\n    <div className={css.modal__backdrop} onClick={handleBackdropClick}>\n      <div className={css.modal__content}>{children}</div>\n    </div>,\n    modalRoot\n  );\n};\n","import { useDispatch } from 'react-redux';\nimport { editContacts } from 'redux/contacts/operations';\n\nexport const FormEdit = ({ id, name, number, onClose }) => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.target;\n    dispatch(\n      editContacts({\n        contactId: id,\n        name: form.elements.name.value,\n        number: form.elements.number.value,\n      })\n    );\n    onClose();\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <label>\n        Name\n        <input\n          type=\"text\"\n          name=\"name\"\n          placeholder={name}\n          // pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </label>\n      <label>\n        Number\n        <input\n          type=\"tel\"\n          name=\"number\"\n          placeholder={number}\n          // pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </label>\n      <div>\n        <button type=\"submit\">edit contact</button>\n      </div>\n    </form>\n  );\n};\n","import css from '../ContactList/ContactsList.module.css';\nimport { useState } from 'react';\nimport { Modal } from 'components/Modal/Modal';\nimport { FormEdit } from 'components/FormEdit/FormEdit';\nimport { useDispatch } from 'react-redux';\nimport { deleteContacts } from 'redux/contacts/operations';\n\nexport const ContactItem = ({ id, name, number }) => {\n  const dispatch = useDispatch();\n  const [showModal, setShowModal] = useState(false);\n\n  const handleDelete = id => {\n    return dispatch(deleteContacts(id));\n  };\n\n  const handleToggleModal = () => {\n    setShowModal(!showModal);\n  };\n\n  return (\n    <li className={css.item}>\n      <p>\n        {name}: {number}\n      </p>\n      <button type=\"button\" id={id} onClick={() => handleToggleModal()}>\n        Edit\n      </button>\n      <button\n        type=\"button\"\n        className={css.buttonDelete}\n        onClick={() => handleDelete(id)}\n      >\n        Delete\n      </button>\n      {showModal && (\n        <Modal onClose={handleToggleModal}>\n          <FormEdit\n            id={id}\n            name={name}\n            number={number}\n            onClose={handleToggleModal}\n          />\n        </Modal>\n      )}\n    </li>\n  );\n};\n","import css from './ContactsList.module.css';\nimport { useSelector } from 'react-redux';\nimport { selectVisibleContacts } from 'redux/filters/selectors';\nimport { ContactItem } from 'components/ContactItem/ContactItem';\n\nexport const ContactList = () => {\n  const visibleContacts = useSelector(selectVisibleContacts);\n\n  return (\n    <div className={css.container}>\n      <ul className={css.list}>\n        {visibleContacts.map(({ id, name, number }) => {\n          return <ContactItem id={id} name={name} number={number} key={id} />;\n        })}\n      </ul>\n    </div>\n  );\n};\n","export const selectContacts = state => state.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.erorr;\n","import { ContactForm } from 'components/ContactForm/ContactForm';\nimport { Filter } from 'components/Filter/Filter';\nimport { Title } from 'components/Title/Title';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { useEffect } from 'react';\nimport { fethContacts } from 'redux/contacts/operations';\nimport { useDispatch } from 'react-redux';\nimport { selectError, selectIsLoading } from 'redux/contacts/selectors';\nimport { useSelector } from 'react-redux/es/hooks/useSelector';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  const error = useSelector(selectError);\n  const isLoading = useSelector(selectIsLoading);\n\n  useEffect(() => {\n    dispatch(fethContacts());\n  }, [dispatch]);\n\n  return (\n    <div>\n      <Title title={'Phonebook'} type={'h1'}></Title>\n      <ContactForm />\n      <Title title={'Contacts'} type={'h2'}></Title>\n      <Filter />\n      {isLoading && <b>Request in progress...</b>}\n      {error && <b>Error</b>}\n      <ContactList />\n    </div>\n  );\n};\n\nexport default Contacts;\n"],"names":["ContactForm","dispatch","useDispatch","className","css","onSubmit","e","preventDefault","form","target","addContacts","name","elements","value","number","reset","type","title","required","Filter","onChange","setStatusFilter","Title","Tag","NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","length","i","createCacheKeyComparator","cache","equals","entry","get","key","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","find","clearCache","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","map","join","Error","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","createSelector","_len2","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","concat","selector","params","push","Object","assign","lastResult","recomputations","resetRecomputations","selectVisibleContacts","state","contacts","items","filters","status","filter","contact","includes","modalRoot","document","querySelector","Modal","children","onClose","handleKeyDown","code","useEffect","window","addEventListener","removeEventListener","createPortal","onClick","currentTarget","FormEdit","id","editContacts","contactId","placeholder","ContactItem","useState","showModal","setShowModal","handleToggleModal","deleteContacts","handleDelete","ContactList","visibleContacts","useSelector","selectIsLoading","isLoading","selectError","erorr","error","fethContacts"],"sourceRoot":""}